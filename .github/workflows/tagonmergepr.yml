name: Tag on Merge Pull Request

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  bump:
    name: Bump tag
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_CHAIN_TOKEN }}
          lfs: true

      - name: Configure git
        run: |
          git config --local user.email "kagekirin+ci@gmail.com"
          git config --local user.name "CI Bot"

      - name: Install conventional-changelog
        run: npm i conventional-changelog-cli -g

      - name: Install version tools
        run: |
          npm install -g https://github.com/kagekirin/node-package-version/tarball/main
          npm install -g https://github.com/kagekirin/unity-bundle-version/tarball/main

      - name: Get latest git tag
        id: latesttag
        run: |
          git fetch --tags
          git tag -l --sort v:refname | tail -n 1
          echo "latest_tag=`git tag -l --sort v:refname | tail -n 1`"
          echo "latest_tag=`git tag -l --sort v:refname | tail -n 1`" >> $GITHUB_ENV

      - name: Verify latest_tag in env
        run: echo "${{ env.latest_tag }}"

      - name: Bump version (NPM)
        run: npm version patch

      - name: Get updated version
        id: updated_version
        run: |
          node-package-version get package.json
          echo "::set-output name=version::`node-package-version get package.json`"
      - name: Print updated version
        run: echo ${{ steps.updated_version.outputs.version }}

      - name: Update unity project bundle version
        id: set_version
        run: |
          unity-bundle-version set -v "${{ steps.updated_version.outputs.version }}" ProjectSettings/ProjectSettings.asset
          unity-bundle-version get ProjectSettings/ProjectSettings.asset
          echo "::set-output name=version::`unity-bundle-version get ProjectSettings/ProjectSettings.asset`"
      - name: Print set version
        run: echo ${{ steps.set_version.outputs.version }}

      - name: Add updated project settings
        run: |
          git add ProjectSettings/ProjectSettings.asset
          git commit -m "chore(tag): update ProjectSettings.asset bundle version to ${{ steps.updated_version.outputs.version }}"

      - name: Update changelog
        run: |
          conventional-changelog -p angular -i CHANGELOG.md -s -r 0
          cat CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "chore(tag): update changelog for version to ${{ steps.updated_version.outputs.version }}"

      - name: Push tag
        run: |
          git status
          git log --oneline | tee "log"
          git push --follow-tags origin
